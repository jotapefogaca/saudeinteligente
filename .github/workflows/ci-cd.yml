name: CI/CD Pipeline

# Define quando o workflow será executado (neste caso, em um push ou pull request na branch master)
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código
    - name: Checkout repository
      uses: actions/checkout@v2

    # Configurar o JDK 17 para rodar a aplicação Java
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'

    # Construir o projeto com Maven
    - name: Build with Maven
      run: mvn clean install -DskipTests

    # Executar os testes do projeto
    - name: Run tests with Maven
      run: mvn test

    # Construir a imagem Docker da aplicação
    - name: Build Docker image
      run: docker build -t saudeinteligente-app .

    # Publicar a imagem Docker no GitHub Container Registry (ghcr.io)
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push Docker image to GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository }}/saudeinteligente-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Simulação de deploy (adapte para seu caso real)
    - name: Deploy to server
      run: |
        echo "Simulando o deploy da aplicação..."
        # Coloque os comandos reais para o deploy, como scp, ssh, ou serviços em nuvem.
